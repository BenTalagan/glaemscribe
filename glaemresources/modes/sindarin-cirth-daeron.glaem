\**

Glǽmscribe (also written Glaemscribe) is a software dedicated to
the transcription of texts between writing systems, and more 
specifically dedicated to the transcription of J.R.R. Tolkien's 
invented languages to some of his devised writing systems.

Copyright (C) 2015 Benjamin Babut (Talagan).

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

**\

\** Sindarin Angerthas Daeron mode for glaemscribe **\

\beg changelog
  \entry 0.0.2 "Added thorn as equivalent for th"
  \entry 0.0.3 "Moved out space to general element"
  \entry 0.0.4 "Fixed wrong ch, hw, h"
  \entry 0.0.5 "Added disambiguations from the tengwar modes. Reworked median point behaviour, and ng."
\end

\language "Sindarin"
\writing  "Cirth"
\mode     "Sindarin Cirth - Angerthas Daeron"
\version  "0.0.5"
\authors  "J.R.R. Tolkien, impl. Talagan (Benjamin Babut)"

\world      arda
\invention  jrrt

\charset  cirth_ds true

\** We redefine the output space to have something beautiful, especially with erebor1 and erebor2 **\ 
\outspace CIRTH_SPACE_BIG

\beg      preprocessor
  \** Work exclusively downcase **\
  \downcase
  
  \** Simplify trema vowels **\
  \substitute ä a
  \substitute ë e
  \substitute ï i
  \substitute ö o
  \substitute ü u
  \substitute ÿ y
  
  \** Dis-ambiguate long vowels **\
  \rxsubstitute "(ā|â|aa)" "á"
  \rxsubstitute "(ē|ê|ee)" "é"
  \rxsubstitute "(ī|î|ii)" "í"
  \rxsubstitute "(ō|ô|oo)" "ó"
  \rxsubstitute "(ū|û|uu)" "ú"
  \rxsubstitute "(ȳ|ŷ|yy)" "ý"
  
  \** Special case of starting 'i' before vowels, replace i by j **\     
  \rxsubstitute "\\bi([aeouyáāâéēêíīîóōôúūûýȳŷ])" "j\\1"
  
  \** Special case of diphtong aw. Before vowels, do not treat 'aw' as diphthong, 
  since it seems more logical that aw would behave as a semi vowel **\
  \rxsubstitute "aw([aeouyáāâéēêíīîóōôúūûýȳŷ])" "a|w\\1"
  
  \** Avoid mutated ng of being treated as strong middle word n|g (ex : i·ngelaidh [iŋɛlaið] ) **\
  \substitute "·ng" "·ŋ"  
  \** But avoid losing the strong g in nasal mutation of g (ex : in·Gelydh [iŋgɛlyð]] ) **\
  \substitute "n·g" "·ŋg"
  \** Use median dot as word joiner **\
  \substitute "·" ""
  
\end

\beg      processor
  
  \beg    rules litteral
  
    \** Vowels **\
  
    a     --> CIRTH_48
    á     --> CIRTH_49
  
    e     --> CIRTH_46
    é     --> CIRTH_47
    
    i     --> CIRTH_39
    í     --> CIRTH_39 CIRTH_39
    
    o     --> CIRTH_50
    ó     --> CIRTH_51 \** Can use CIRTH_51_ALT **\
    
    ö     --> CIRTH_52 \** Can use CIRTH_52_ALT **\
    œ     --> CIRTH_52
 
    u     --> CIRTH_42
    ú     --> CIRTH_43
    
    ü     --> CIRTH_45_ALT \** Can use CIRTH_45 **\
    y     --> CIRTH_45_ALT \** Can use CIRTH_45 **\
  
    \** Consonants **\

    p     --> CIRTH_1
    b     --> CIRTH_2
    t     --> CIRTH_8 
    d     --> CIRTH_9
  
    f     --> CIRTH_3
    v     --> CIRTH_4
    ff_   --> CIRTH_3
 
    bh    --> CIRTH_4
    
    dh    --> CIRTH_11
    đ     --> CIRTH_11
    ð     --> CIRTH_11
    ðh    --> CIRTH_11

    g     --> CIRTH_19
    gh    --> CIRTH_21
    (k,c)     --> CIRTH_18
    (kh,ch)   --> CIRTH_20
    
    
    h     --> CIRTH_54 \**  13 is more eng. ch like in chin and 15 is more eng. sh like in shoe **\
    
    j     --> CIRTH_14
    
    l     --> CIRTH_31
    lh    --> CIRTH_32
    m     --> CIRTH_6
    mb    --> CIRTH_7
    mh    --> CIRTH_7
    n     --> CIRTH_12
    nc_   --> CIRTH_22 CIRTH_18 \** equals ŋc **\
    nd    --> CIRTH_38
    
    \** Normalisation of ng **\
    (ng,ngg,ŋg,ñg)  --> CIRTH_33 \** strong **\
    (ng_,_ng,ŋ,ñ)   --> CIRTH_22 \** weak **\
  
    nj    --> CIRTH_17
    r     --> CIRTH_29
    rh    --> CIRTH_30
    s     --> CIRTH_34 \** Can use CIRTH_35 **\
    sh    --> CIRTH_15
    ss    --> CIRTH_36
    (þ,th) --> CIRTH_10
    zh    --> CIRTH_16
    
    \** Labials **\
    hw                --> CIRTH_5
    ghw               --> CIRTH_26
    gw                --> CIRTH_24    
    (ng,ngg,ŋg,ñg)w   --> CIRTH_27     \** STRONG NG + W **\
    khw               --> CIRTH_25
    kw                --> CIRTH_23
    nw                --> CIRTH_28
    w                 --> CIRTH_44

  \end
  
  \beg    rules punctuation

    . --> CIRTH_PUNCT_THREE_DOTS
    .. --> CIRTH_PUNCT_THREE_DOTS
    ... --> CIRTH_PUNCT_THREE_DOTS
    …   --> CIRTH_PUNCT_THREE_DOTS
    .... --> CIRTH_PUNCT_THREE_DOTS
    ..... --> CIRTH_PUNCT_THREE_DOTS
    ...... --> CIRTH_PUNCT_THREE_DOTS
    ....... --> CIRTH_PUNCT_THREE_DOTS

    , --> CIRTH_PUNCT_MID_DOT
    : --> CIRTH_PUNCT_TWO_DOTS
    ; --> CIRTH_PUNCT_TWO_DOTS
    ! --> CIRTH_PUNCT_THREE_DOTS
    ? --> CIRTH_PUNCT_THREE_DOTS
    · --> {NULL}

    - --> {NULL}
    – --> CIRTH_PUNCT_TWO_DOTS  
    — --> CIRTH_PUNCT_TWO_DOTS

    \** Apostrophe **\

    ' --> {NULL}
    ’ --> {NULL}

    \** Quotes **\

    “ --> {NULL}
    ” --> {NULL}
    « --> {NULL} 
    » --> {NULL} 

    [ --> CIRTH_PUNCT_THREE_DOTS_L
    ] --> CIRTH_PUNCT_THREE_DOTS_L
    ( --> CIRTH_PUNCT_THREE_DOTS_L
    ) --> CIRTH_PUNCT_THREE_DOTS_L
    { --> CIRTH_PUNCT_THREE_DOTS_L
    } --> CIRTH_PUNCT_THREE_DOTS_L
    < --> CIRTH_PUNCT_THREE_DOTS_L
    > --> CIRTH_PUNCT_THREE_DOTS_L

    / --> CIRTH_PUNCT_FOUR_DOTS

  \end
\end


    
