\**

Glǽmscribe (also written Glaemscribe) is a software dedicated to
the transcription of texts between writing systems, and more 
specifically dedicated to the transcription of J.R.R. Tolkien's 
invented languages to some of his devised writing systems.

Copyright (C) 2015 Benjamin Babut (Talagan).

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

**\

\beg changelog
  \entry "0.0.2" "Correcting ts/ps sequences to work better with eldamar"
  \entry "0.0.3" "Porting to virtual chars"
  \entry "0.0.4" "Added charset support for Annatar"
  \entry "0.0.5" "Added support for the FreeMonoTengwar font" 
\end

\**  Westron mode for glaemscribe (MAY BE INCOMPLETE) **\
\language Westron
\writing  Tengwar
\mode     Glaemscrafu
\version  0.0.5
\authors  "Talagan (Benjamin Babut), based on J.R.R. Tolkien"

\charset  tengwar_ds_sindarin true
\charset  tengwar_ds_parmaite false
\charset  tengwar_ds_eldamar  false
\charset  tengwar_ds_annatar  false
\charset  tengwar_freemono    false

\beg      options
  \option reverse_numbers true
  \beg option numbers_base BASE_12
    \value    BASE_10 10
    \value    BASE_12 12
  \end
\end

\beg      preprocessor
  \** Work exclusively downcase **\
  \downcase
  
  \** Simplify trema vowels **\
  \substitute "ä" "a"
  \substitute "ë" "e"
  \substitute "ï" "i"
  \substitute "ö" "o"
  \substitute "ü" "u"
  \substitute "ÿ" "y"
  
  \** Dis-ambiguate long vowels **\
  \rxsubstitute "(ā|â|aa)" "á"
  \rxsubstitute "(ē|ê|ee)" "é"
  \rxsubstitute "(ī|î|ii)" "í"
  \rxsubstitute "(ō|ô|oo)" "ó"
  \rxsubstitute "(ū|û|uu)" "ú"
  \rxsubstitute "(ȳ|ŷ|yy)" "ý"
  
  \** Preprocess numbers **\
  \elvish_numbers "\\eval numbers_base" "\\eval reverse_numbers"
\end

\beg      processor

  \beg    rules litteral  
    {A}   === a
    {AA}  === á
    {E}   === e
    {EE}  === é
    {I}   === i
    {II}  === í
    {O}   === o
    {OO}  === ó
    {U}   === u
    {UU}  === ú

    \** Short diphthongs **\
    {AI}  === {A}{I}
    {AU}  === {A}{U}
	  {EI}  === {E}{I}
	  {EU}  === {E}{U}
	  {OI}  === {O}{I}
	  {OU}  === {O}{U}
	  {UI}  === {U}{I}
	  {IU}  === {I}{U}

    \** LONG diphthongs **\      
    {AAI} === {AA}{I} \** âi **\
    {AAU} === {AA}{U} \** âu **\
    {EEI} === {EE}{I} \** êi **\
    {EEU} === {EE}{U} \** êu **\
    {OOI} === {OO}{I} \** ôi **\
    {OOU} === {OO}{U} \** ôu **\

    {SDIPHTHONGS}  === {AI}           * {AU}          * {EI} 				    * {EU}        * {IU}        * {OI}          * {OU}        * {UI}
    {_SDIPHTONGS_} === YANTA A_TEHTA  * URE A_TEHTA   * YANTA E_TEHTA	  * URE E_TEHTA * URE I_TEHTA * YANTA O_TEHTA * URE O_TEHTA * YANTA U_TEHTA                   
    
    {LDIPHTHONGS}  === {AAI}              * {AAU}              * {EEI}              * {EEU}            * {OOI}              * {OOU}
    {_LDIPHTONGS_} === ARA A_TEHTA YANTA  * ARA A_TEHTA URE    * ARA E_TEHTA YANTA  * ARA E_TEHTA URE  * ARA O_TEHTA YANTA  * ARA O_TEHTA URE
                   
    {VOWELS}      === {A}      * {E}      * {I}        * {O}        * {U}    
    {TEHTAR}      === A_TEHTA  * E_TEHTA  * I_TEHTA    * O_TEHTA    * U_TEHTA
                  
    {LVOWELS}     === {AA}         * {EE}         * {II}         * {OO}         * {UU}
    {LTETHAR}     === ARA A_TEHTA  * ARA E_TEHTA  * ARA I_TEHTA  * ARA O_TEHTA  * ARA U_TEHTA 

    \** Let' put all vowels/diphthongs in the same basket **\
    {V_D}         === [ {VOWELS}  * {LVOWELS} * {SDIPHTHONGS} * {LDIPHTHONGS} ]        
    \** And their images... **\            
    {_V_D_}       === [ {TEHTAR}  * {LTETHAR} * {_SDIPHTONGS_} * {_LDIPHTONGS_} ]
 
    [{VOWELS}]      --> TELCO [{TEHTAR}]   \** Replace isolated short vowels **\
    [{LVOWELS}]     --> [{LTETHAR}]    \** Replace long vowels **\
    [{SDIPHTHONGS}]  --> [{_SDIPHTONGS_}]  \** Replace short diphthongs **\
    [{LDIPHTHONGS}]  --> [{_LDIPHTONGS_}]  \** Replace long diphthongs **\

    \** ================ **\
    \**    CONSONANTS    **\
    \** ================ **\     

    {L1_S}         === t      * p     * ch		  * (c,k)       
    {L1_T}         === TINCO  * PARMA * CALMA	  * QUESSE 
    
    [{L1_S}]       -->  [ {L1_T} ]
    [{L1_S}]{V_D}  -->  [ {L1_T} ]{_V_D_} 
	
    {L1_G_S}         === tt			              * pp                  * cch				          * (c,k)(c,k)             
    {L1_G_T}         === TINCO GEMINATE_SIGN  * PARMA GEMINATE_SIGN * CALMA GEMINATE_SIGN	* QUESSE GEMINATE_SIGN  
    
    [{L1_G_S}]       -->  [ {L1_G_T} ]
    [{L1_G_S}]{V_D}  -->  [ {L1_G_T} ]{_V_D_} 
	  
    {L1_N_S}         === nt			              * mp                    * nch				          * (n,ñ)(c,k)             
    {L1_N_T}         === TINCO NASALIZE_SIGN  * PARMA NASALIZE_SIGN   * CALMA NASALIZE_SIGN * QUESSE NASALIZE_SIGN  
    
    [{L1_N_S}]       -->  [ {L1_N_T} ]
    [{L1_N_S}]{V_D}  -->  [ {L1_N_T} ]{_V_D_} 	 

    {L2_S}         === d    * b     * j	  	* g
    {L2_T}         === ANDO * UMBAR * ANGA	* UNGWE
		
    [{L2_S}]       --> [{L2_T}] 
    [{L2_S}]{V_D}  --> [{L2_T}]{_V_D_} 

    {L2_G_S}         === dd                 * bb                  * jj			            * gg
    {L2_G_T}         === ANDO GEMINATE_SIGN * UMBAR GEMINATE_SIGN * ANGA GEMINATE_SIGN  * UNGWE GEMINATE_SIGN
		
    [{L2_G_S}]       --> [{L2_G_T}] 
    [{L2_G_S}]{V_D}  --> [{L2_G_T}]{_V_D_} 

    {L2_N_S}         === nd                 * mb                  * nj			            * (n,ñ)g
    {L2_N_T}         === ANDO NASALIZE_SIGN * UMBAR NASALIZE_SIGN * ANGA NASALIZE_SIGN  * UNGWE NASALIZE_SIGN
		
    [{L2_N_S}]       --> [{L2_N_T}] 
    [{L2_N_S}]{V_D}  --> [{L2_N_T}]{_V_D_} 

    \** Alignment of tehta is not the same in the font **\
    \** So we need to split the third line unfortunately **\
    {L3_1_S}          === (th,þ)    * (f,ph)      
    {L3_1_T}          === SULE      * FORMEN  
   
    {L3_2_S}          === sh     * kh     
    {L3_2_T}          === AHA    * HWESTA
   
    [{L3_1_S}]        --> [{L3_1_T}] 
    [{L3_1_S}]{V_D}   --> [{L3_1_T}]{_V_D_} 
    [{L3_2_S}]        --> [{L3_2_T}] 
    [{L3_2_S}]{V_D}   --> [{L3_2_T}]{_V_D_} 
		
    {L3_1G_S}         === (thth,tth,þþ)       * (ff,phph,pph)
    {L3_1G_T}         === SULE GEMINATE_SIGN  * FORMEN GEMINATE_SIGN
   
    {L3_2G_S}          === (shsh,ssh)         * (k,kh)kh
    {L3_2G_T}          === AHA GEMINATE_SIGN  * HWESTA GEMINATE_SIGN
   
    [{L3_1G_S}]        --> [{L3_1G_T}] 
    [{L3_1G_S}]{V_D}   --> [{L3_1G_T}]{_V_D_} 
    [{L3_2G_S}]        --> [{L3_2G_T}] 
    [{L3_2G_S}]{V_D}   --> [{L3_2G_T}]{_V_D_} 		

    {L3_1N_S}          === (nth,nþ)           * (nf,mf,mph)      
    {L3_1N_T}          === SULE NASALIZE_SIGN * FORMEN NASALIZE_SIGN  
   
    {L3_2N_S}          === nsh               * (n,ñ)kh     
    {L3_2N_T}          === AHA NASALIZE_SIGN * HWESTA NASALIZE_SIGN
   
    [{L3_1N_S}]        --> [{L3_1N_T}] 
    [{L3_1N_S}]{V_D}   --> [{L3_1N_T}]{_V_D_} 
    [{L3_2N_S}]        --> [{L3_2N_T}] 
    [{L3_2N_S}]{V_D}   --> [{L3_2N_T}]{_V_D_} 

    {L4_S}            === (dh,ð)    * v   	* zh	  * gh
    {L4_T}            === ANTO      * AMPA  * ANCA	* UNQUE
		
    [{L4_S}]          --> [{L4_T}] 
    [{L4_S}]{V_D}     --> [{L4_T}]{_V_D_} 

    {L4_G_S}            === (dh,ð)(dh,ð)        * vv                  * (zhzh,zzh)	        * (ghgh,ggh)
    {L4_G_T}            === ANTO GEMINATE_SIGN  * AMPA GEMINATE_SIGN  * ANCA GEMINATE_SIGN  * UNQUE GEMINATE_SIGN
		
    [{L4_G_S}]          --> [{L4_G_T}] 
    [{L4_G_S}]{V_D}     --> [{L4_G_T}]{_V_D_} 

    {L4_N_S}            === n(dh,ð)             * (mv,nv)             * nzh	                * (n,ñ)gh
    {L4_N_T}            === ANTO NASALIZE_SIGN  * AMPA NASALIZE_SIGN  * ANCA NASALIZE_SIGN  * UNQUE NASALIZE_SIGN
		
    [{L4_N_S}]          --> [{L4_N_T}] 
    [{L4_N_S}]{V_D}     --> [{L4_N_T}]{_V_D_} 

    {L5_S}            === n     * m     * ny     * ñ
    {L5_T}            === NUMEN * MALTA * NOLDO  * NWALME
		
    [{L5_S}]          --> [{L5_T}] 
    [{L5_S}]{V_D}     --> [{L5_T}]{_V_D_} 

    {L5_G_S}            === nn      * mn      * (nyny,nny)   * ññ
    {L5_G_T}            === NUMEN   * MALTA   * NOLDO        * NWALME
		
    [{L5_G_S}]          --> [{L5_G_T}] 
    [{L5_G_S}]{V_D}     --> [{L5_G_T}]{_V_D_} 
		
    {L6_S}            === w  	  * y     * rr                  * ww         	        * yy
    {L6_T}            === VALA  * ANNA  * ROMEN GEMINATE_SIGN * VALA GEMINATE_SIGN  * ANNA GEMINATE_SIGN
    [r * {L6_S}]      --> [ ORE   * {L6_T}] 
    [r * {L6_S}]{V_D} --> [ ROMEN * {L6_T}]{_V_D_} 

    \** This one is not useful (redundant with higher) **\
    \** Keep it for clarity of mind **\
    r_                --> ORE

    s{V_D}            --> SILME_NUQUERNA {_V_D_}  \** Before a vowel goes down **\
    s                 --> SILME                   \** Any other pos, up **\
    z{V_D}            --> ESSE_NUQUERNA {_V_D_}   \** Before a vowel goes down **\
    z                 --> ESSE                    \** Any other pos, up **\
		
    ns{V_D}           --> SILME_NUQUERNA NASALIZE_SIGN {_V_D_}
    ns                --> SILME_NUQUERNA NASALIZE_SIGN                   
    nz{V_D}           --> ESSE_NUQUERNA NASALIZE_SIGN {_V_D_}   
    nz                --> ESSE_NUQUERNA NASALIZE_SIGN                

    ts                --> TINCO ALVEOLAR_SIGN
    ps                --> PARMA ALVEOLAR_SIGN
    (ks,cs,x)         --> QUESSE ALVEOLAR_SIGN

    ts{V_D}           --> TINCO {_V_D_} ALVEOLAR_SIGN 
    ps{V_D}           --> PARMA {_V_D_} ALVEOLAR_SIGN
    (ks,cs,x){V_D}    --> QUESSE ALVEOLAR_SIGN {_V_D_}	

    h{V_D}            --> HYARMEN {_V_D_}
    h                 --> HYARMEN
    hh{V_D}           --> HYARMEN GEMINATE_SIGN {_V_D_}
    hh                --> HYARMEN GEMINATE_SIGN
                      
    l{V_D}            --> LAMBE {_V_D_}
    l                 --> LAMBE
                      
    ll{V_D}           --> LAMBE GEMINATE_SIGN {_V_D_}
    ll                --> LAMBE GEMINATE_SIGN
		
    (hl,lh){V_D}      --> ALDA {_V_D_}
    (hl,lh)           --> ALDA		

    (hr,rh){V_D}      --> ARDA {_V_D_}
    (hr,rh)           --> ARDA	
		
  \end
  
  \beg rules punctutation
    . --> PUNCT_DDOT
    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT
    …  --> PUNCT_TILD
    ... --> PUNCT_TILD
    .... --> PUNCT_TILD
    ..... --> PUNCT_TILD
    ...... --> PUNCT_TILD
    ....... --> PUNCT_TILD

    , --> PUNCT_DOT
    : --> PUNCT_DOT
    ; --> PUNCT_DOT
    ! --> PUNCT_EXCLAM
    ? --> PUNCT_INTERR
    · --> PUNCT_DOT

    \** Apostrophe **\

    ' --> {NULL}
    ’ --> {NULL}

    \** Quotes **\

    “ --> DQUOT_OPEN
    ” --> DQUOT_CLOSE
    « --> DQUOT_OPEN 
    » --> DQUOT_CLOSE 
    
    - --> PUNCT_DOT    
    – --> WAVE_MED_SIMPLE  
    — --> WAVE_MED_DOUBLE
 
    [ --> PUNCT_PAREN_L
    ] --> PUNCT_PAREN_R
    ( --> PUNCT_PAREN_L
    ) --> PUNCT_PAREN_R
    { --> PUNCT_PAREN_L
    } --> PUNCT_PAREN_R
    < --> PUNCT_PAREN_L
    > --> PUNCT_PAREN_R  

    \** Not universal between fonts ... **\
    $ --> BOOKMARK_SIGN
    ≤ --> RING_MARK_L \** Ring inscription left beautiful stuff **\
    ≥ --> RING_MARK_R \** Ring inscription right beautiful stuff **\
  \end

  \beg rules numbers
    0 --> NUM_0
    1 --> NUM_1
    2 --> NUM_2
    3 --> NUM_3
    4 --> NUM_4
    5 --> NUM_5
    6 --> NUM_6
    7 --> NUM_7
    8 --> NUM_8
    9 --> NUM_9
    A --> NUM_10
    B --> NUM_11   
  \end
  
\end

\beg postprocessor
  \resolve_virtuals
\end