\**

Glǽmscribe (also written Glaemscribe) is a software dedicated to
the transcription of texts between writing systems, and more
specifically dedicated to the transcription of J.R.R. Tolkien's
invented languages to some of his devised writing systems.

Copyright (C) 2015 Benjamin Babut (Talagan).

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

**\

\beg changelog
  \entry "0.0.2", "added χ for the word χarina, correcting ts/ps sequences to work better with eldamar"
  \entry "0.0.3", "added o/u curl option"
  \entry "0.0.4", "added voiced plosives corner cases treatment and option to chose method"
  \entry "0.0.5", "fixing h+long vowel medially"
  \entry "0.0.6", "adding option for alveolarized consonants  st (t+t), pt (p+t), ht (c+t)"
  \entry "0.0.7", "Fixing rb/lb, to be treated as r+mb and l+mb"
  \entry "0.0.8", "Correcting double dot version for ry (aesthetics)"
  \entry "0.0.9", "Adding 'implicit a' option."
  \entry "0.1.0", "Simplified diacritic use by using new post-processor directive"
  \entry "0.1.1", "Added default option for voiced plosives : use mb, nd, ng, ngw"
  \entry "0.1.2", "Added a tehta shape selection"
  \entry "0.1.3", "Fixing ks, ps, ts. Fixing dot under ore, romen in implicit a mode."
  \entry "0.1.4", "Conforming to the new csub format. Cleaning with new csub classes."
\end

\**
  TODO : Option for dot or not in 'a implicit' option before long vowels ?
  TODO : bb, dd etc ? (for noobs)
**\

\language "Quenya"
\writing  "Tengwar"
\mode     "Classical"
\version  "0.1.3"
\authors  "Talagan (Benjamin Babut)"

\charset  tengwar_ds true

\beg      options
  \option implicit_a false
  \beg option a_tetha_shape A_SHAPE_THREE_DOTS
    \value A_SHAPE_THREE_DOTS 1
    \value A_SHAPE_CIRCUMFLEX 2
  \end
  \beg option reverse_o_u_tehtar U_UP_O_DOWN
    \value O_UP_U_DOWN 1
    \value U_UP_O_DOWN 2
  \end
  \option split_diphthongs false
  \option always_use_romen_for_r false
  \beg option voiced_plosives_treatment VOICED_PLOSIVES_AS_NASALIZED
    \value VOICED_PLOSIVES_AS_NASALIZED 0
    \value VOICED_PLOSIVES_WITH_STROKE 1
    \value VOICED_PLOSIVES_WITH_XTD 2
  \end
  \beg option st_pt_ht ST_PT_HT_SEPARATED
    \value ST_PT_HT_SEPARATED 1
    \value ST_PT_HT_WITH_XTD 2
  \end
  \option reverse_numbers true
  \beg option numbers_base BASE_12
    \value    BASE_10 10
    \value    BASE_12 12
  \end
\end

\beg      preprocessor
  \** Work exclusively downcase **\
  \downcase

  \** Simplify trema vowels **\
  \substitute ä a
  \substitute ë e
  \substitute ï i
  \substitute ö o
  \substitute ü u
  \substitute ÿ y

  \** Dis-ambiguate long vowels **\
  \rxsubstitute "(ā|â|aa)" "á"
  \rxsubstitute "(ē|ê|ee)" "é"
  \rxsubstitute "(ī|î|ii)" "í"
  \rxsubstitute "(ō|ô|oo)" "ó"
  \rxsubstitute "(ū|û|uu)" "ú"
  \rxsubstitute "(ȳ|ŷ|yy)" "ý"

  \substitute   "qu" "q" \** Dis-ambiguate qu **\

  \elvish_numbers "\\eval numbers_base" "\\eval reverse_numbers"
\end


\beg processor

  \beg    rules litteral

    {K}                 ===  (c,k)
    {SS}                ===  (z,ss)

    {VOWELS}            === a               *  e              * i              * o              *  u
    {LVOWELS}           === á               *  é              * í              * ó              *  ú

    \if "reverse_o_u_tehtar == U_UP_O_DOWN"
      {O_LOOP} === O_TEHTA
      {U_LOOP} === U_TEHTA
    \else
      {O_LOOP} === U_TEHTA
      {U_LOOP} === O_TEHTA
    \endif

    \if "a_tetha_shape == A_SHAPE_THREE_DOTS"
      {A_SHAPE} === A_TEHTA
    \else
      {A_SHAPE} === A_TEHTA_CIRCUM
    \endif

    \if implicit_a
      {_A_}              === {NULL}
      {_NVOWEL_}         === THINF_DOT
    \else
      {_A_}              === {A_SHAPE}
      {_NVOWEL_}         === {NULL}
    \endif

    {_TEHTAR_}          === {_A_}      *  E_TEHTA     *  I_TEHTA    * {O_LOOP}    *  {U_LOOP}

    \if split_diphthongs
      {WDIPHTHONGS}     === {NULL}
      {_WDIPHTHONGS_}   === {NULL}
    \else
      {DIPHTHONGS}      === ai            * au            * eu            * iu             * oi               * ui
      {_DIPHTHONGS_}    === YANTA {_A_}   * URE {_A_}     * URE E_TEHTA   * URE I_TEHTA    * YANTA {O_LOOP}   * YANTA {U_LOOP}
      {WDIPHTHONGS}     === * {DIPHTHONGS}   \** groovy! **\
      {_WDIPHTHONGS_}   === * {_DIPHTHONGS_} \** same thing **\
    \endif

    \if implicit_a
      \** consonants will take a tehta for a, and have ara + tehta in other cases **\
      
      \** Bertrand does like the dot before long vowels **\
      \** {_LTEHTAR_}     === {A_SHAPE} * {_NVOWEL_} ARA E_TEHTA * {_NVOWEL_} ARA I_TEHTA * {_NVOWEL_} ARA {O_LOOP} * {_NVOWEL_} ARA {U_LOOP} **\
      
      {_LTEHTAR_}         === {A_SHAPE} * ARA E_TEHTA * ARA I_TEHTA * ARA {O_LOOP} * ARA {U_LOOP}
      {_WLONG_}           === * {_LTEHTAR_}
      {WLONG}             === * {LVOWELS}
    \else
      {_LTEHTAR_}         === ARA {A_SHAPE} * ARA E_TEHTA * ARA I_TEHTA * ARA {O_LOOP} * ARA {U_LOOP}
      {_WLONG_}           === {NULL}
      {WLONG}             === {NULL}
    \endif

    {V_D}           === [ {VOWELS} {WLONG} {WDIPHTHONGS} ]
    {V_D_WN}        === [ {VOWELS} {WLONG} {WDIPHTHONGS} * {NULL} ]

    {_V_D_}         === [ {_TEHTAR_} {_WLONG_} {_WDIPHTHONGS_} ]
    {_V_D_WN_}      === [ {_TEHTAR_} {_WLONG_} {_WDIPHTHONGS_} * {_NVOWEL_} ]

    \** VOWEL RULES **\
    [{VOWELS}]    --> TELCO [{_TEHTAR_}]  \** Replace isolated short vowels **\
    \if implicit_a
      [{LVOWELS}] --> TELCO {A_SHAPE}  * ARA E_TEHTA * ARA I_TEHTA * ARA {O_LOOP} * ARA {U_LOOP}
    \else
      [{LVOWELS}] --> [{_LTEHTAR_}]       \** Replace long vowels **\
    \endif

    \if !split_diphthongs
      [{DIPHTHONGS}]    -->   [{_DIPHTHONGS_}]     \**  Replace diphthongs **\
    \endif

    \** ===================== **\
    \**     1ST LINE RULES    **\
    \** ===================== **\
    {L1}          === t     * p       * {K}   * q
    {_L1_}        === TINCO * PARMA   * CALMA * QUESSE

    \** GEMINATED **\
    {L1_1_GEMS}   === tt                  * pp               * {K}{K}
    {_L1_1_GEMS_} === TINCO DASH_INF      * PARMA DASH_INF   * CALMA DASH_INF

    \** NORMAL **\
    [ {L1} * {L1_1_GEMS} ] {V_D_WN} --> [ {_L1_} * {_L1_1_GEMS_} ] {_V_D_WN_}

    \** OTHERS **\
    ty{V_D_WN}          --> TINCO THINF_DDOT {_V_D_WN_}
    py{V_D_WN}          --> PARMA THINF_DDOT {_V_D_WN_}

    ts{V_D_WN}          --> TINCO {_V_D_WN_} SHOOK_RIGHT
    ps{V_D_WN}          --> PARMA {_V_D_WN_} SHOOK_RIGHT
    {K}s{V_D_WN}        --> CALMA SHOOK_LEFT {_V_D_WN_}   
    x{V_D_WN}           --> CALMA SHOOK_LEFT {_V_D_WN_}   \** render ks for x **\

    \** ===================== **\
    \**     2ND LINE RULES    **\
    \** ===================== **\
    {L2}          === nd      * mb        * ng      * ngw
    {_L2_}        === ANDO    * UMBAR     * ANGA    * UNGWE

    \** STANDARD **\
    [{L2}]{V_D_WN}  --> [{_L2_}]{_V_D_WN_}

    \** Palatalized **\
    ndy{V_D_WN} --> ANDO THINF_DDOT {_V_D_WN_}

    \** Have some rules for d,b,g,gw although there are not theoritically possible, aldudénie e.g needs it **\
    {L2_UN}               === d       * b         * g       * gw

    \if "voiced_plosives_treatment == VOICED_PLOSIVES_AS_NASALIZED"
      [{L2_UN}]{V_D_WN}   --> [{_L2_}] {_V_D_WN_}
    \elsif "voiced_plosives_treatment == VOICED_PLOSIVES_WITH_STROKE"
      [{L2_UN}]{V_D_WN}   --> [{_L2_}] THINF_STROKE_XL {_V_D_WN_}
    \else
      {_L2_UN_}            === TW_EXT_21 * TW_EXT_22 * TW_EXT_23 * TW_EXT_24
      [{L2_UN}]{V_D_WN}    --> [{_L2_UN_}] {_V_D_WN_}
    \endif

    \if "st_pt_ht == ST_PT_HT_WITH_XTD"
      {L2_ALVEOLARIZED}     === st        * pt        * ht
      {_L2_ALVEOLARIZED_}   === TW_EXT_11 * TW_EXT_12 * TW_EXT_13

      [{L2_ALVEOLARIZED}]{V_D_WN}  --> [{_L2_ALVEOLARIZED_}] {_V_D_WN_}
    \endif

    \** ===================== **\
    \**     3RD LINE RULES    **\
    \** ===================== **\
    {L3}      === (th,þ) * f       * (h,χ)  * hw
    {_L3_}    === SULE   * FORMEN  * AHA    * HWESTA

    \** NORMAL **\
    [{L3}]{V_D_WN}  --> [{_L3_}]{_V_D_WN_}

    \** OTHERS **\
    hy{V_D_WN}      --> HYARMEN THINF_DDOT {_V_D_WN_}

    \** Override h with vowels (descendent of hy) **\
    _h{V_D}         --> HYARMEN {_V_D_}
    _h[{LVOWELS}]   --> HYARMEN [{_LTEHTAR_}]

    (h,χ)           --> AHA

    \** ===================== **\
    \**     4TH LINE RULES    **\
    \** ===================== **\
    {L4}   === nt    * mp    * nc    * nq      \** Not nqu, due to preprocessor **\
    {_L4_} === ANTO  * AMPA  * ANCA  * UNQUE

    \** NORMAL **\
    [{L4}]{V_D_WN}    --> [{_L4_}]{_V_D_WN_}
    \** OTHERS **\
    nty{V_D_WN}       --> ANTO THINF_DDOT {_V_D_WN_}

    \** ===================== **\
    \**     5TH LINE RULES    **\
    \** ===================== **\
    {L5}   === n     * m     * ñ     * ñw      * _nw
    {_L5_} === NUMEN * MALTA * NOLDO * NWALME  * NWALME

    [{L5}]{V_D_WN}  --> [{_L5_}]{_V_D_WN_}

    ny{V_D_WN}          --> NUMEN THINF_DDOT {_V_D_WN_}
    nn{V_D_WN}          --> NUMEN DASH_INF   {_V_D_WN_}
    my{V_D_WN}          --> MALTA THINF_DDOT {_V_D_WN_}
    mm{V_D_WN}          --> MALTA DASH_INF   {_V_D_WN_}

    \** ===================== **\
    \**     6TH LINE RULES    **\
    \** ===================== **\

    {_LONE_R_} === ORE
    \if always_use_romen_for_r
      \** Override lone r if option is on **\
      {_LONE_R_} === ROMEN 
    \endif

    {L6}        === r     * v     * y                   * w
    {_L6_}      === ROMEN * VALA  * ANNA THINF_DDOT   * VILYA

    [{L6}]{V_D_WN} --> [{_L6_}]{_V_D_WN_}

    \** r before long vowels is voiced **\
    r[{LVOWELS}]      --> ROMEN [{_LTEHTAR_}]

    \** Override rule r + null **\
    r                 --> {_LONE_R_} {_NVOWEL_}

    rr{V_D_WN}        --> ROMEN DASH_INF {_V_D_WN_}
    ry{V_D_WN}        --> ROMEN THINF_DDOT {_V_D_WN_}
    rd{V_D_WN}        --> ARDA {_V_D_WN_}

    \** ===================== **\
    \**     L  LINE RULES     **\
    \** ===================== **\
    {LINE_L}          === l     * ld      * ll
    {_LINE_L_}        === LAMBE * ALDA    * LAMBE LAMBE_MARK_TILD

    [{LINE_L}]{V_D_WN}    --> [{_LINE_L_}]{_V_D_WN_}

    ly{V_D_WN}            --> LAMBE THINF_DDOT {_V_D_WN_}
    hl{V_D_WN}            --> HALLA LAMBE {_V_D_WN_}
    hr{V_D_WN}            --> HALLA ROMEN {_V_D_WN_}

    \** ===================== **\
    \**   S/Z LINE RULES      **\
    \** ===================== **\
    {L8}        === s               * {SS}
    {_L8_}      === SILME_NUQUERNA  * ESSE_NUQUERNA

    [{L8}]{V_D_WN} --> [{_L8_}]{_V_D_WN_}

    \** Override lonely s / ss / before consonant **\
    s               --> SILME
    s[{LVOWELS}]    --> SILME [{_LTEHTAR_}]
    {SS}            --> ESSE
    {SS}[{LVOWELS}] --> ESSE [{_LTEHTAR_}]

    \if implicit_a
      sá            --> SILME_NUQUERNA {A_SHAPE}
      {SS}á         --> ESSE_NUQUERNA {A_SHAPE}
    \endif

  \end

  \beg    rules punctuation
    . --> PUNCT_DDOT
    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT
    …  --> PUNCT_TILD
    ... --> PUNCT_TILD
    .... --> PUNCT_TILD
    ..... --> PUNCT_TILD
    ...... --> PUNCT_TILD
    ....... --> PUNCT_TILD

    , --> PUNCT_DOT
    : --> PUNCT_DOT
    ; --> PUNCT_DOT
    ! --> PUNCT_EXCLAM
    ? --> PUNCT_INTERR
    · --> PUNCT_DOT

    \** Apostrophe **\

    ' --> {NULL}
    ’ --> {NULL}

    \** Quotes **\

    “ --> DQUOT_OPEN
    ” --> DQUOT_CLOSE
    « --> DQUOT_OPEN
    » --> DQUOT_CLOSE

    - --> {NULL}
    – --> PUNCT_TILD
    — --> PUNCT_TILD

    [ --> PUNCT_PAREN_L
    ] --> PUNCT_PAREN_R
    ( --> PUNCT_PAREN_L
    ) --> PUNCT_PAREN_R
    { --> PUNCT_PAREN_L
    } --> PUNCT_PAREN_R
    < --> PUNCT_PAREN_L
    > --> PUNCT_PAREN_R

    \** Not universal between fonts ... **\
    $ --> BOOKMARK_SIGN
    ≤ --> RING_MARK_L \** Ring inscription left beautiful stuff **\
    ≥ --> RING_MARK_R \** Ring inscription right beautiful stuff **\

  \end

  \beg    rules  numbers
    0 --> NUM_0
    1 --> NUM_1
    2 --> NUM_2
    3 --> NUM_3
    4 --> NUM_4
    5 --> NUM_5
    6 --> NUM_6
    7 --> NUM_7
    8 --> NUM_8
    9 --> NUM_9
    A --> NUM_10
    B --> NUM_11
  \end

\end

\beg postprocessor

  \** The following rules are used to handle tehtar (& the like) multiple version chosing **\
  \** It could be avoided with modern fonts with gsub/gpos tables for ligatures and diacritics **\
  \** placement **\

  \** TODO : Move FORMEN to S, move HYARMEN to XS **\
  
  \beg csub A_TEHTA
    \class A_TEHTA_XS   TELCO ARA
    \class A_TEHTA_S    ORE TW_EXT_11 TW_EXT_12 SULE HYARMEN
    \class A_TEHTA_L    TINCO CALMA PARMA QUESSE AHA HWESTA LAMBE ALDA YANTA URE ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA VALA ANNA VILYA FORMEN
    \class A_TEHTA_XL   TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME
  \end
 
  \beg csub A_TEHTA_CIRCUM
    \class A_TEHTA_CIRCUM_XS   TELCO ARA
    \class A_TEHTA_CIRCUM_S    ORE TW_EXT_11 TW_EXT_12 SULE HYARMEN
    \class A_TEHTA_CIRCUM_L    TINCO CALMA PARMA QUESSE AHA HWESTA LAMBE ALDA YANTA URE ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA VALA ANNA VILYA FORMEN
    \class A_TEHTA_CIRCUM_XL   TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME
  \end
  
  \beg csub E_TEHTA
    \class E_TEHTA_XS   TELCO ARA
    \class E_TEHTA_S    ORE TW_EXT_11 TW_EXT_12 SULE HYARMEN
    \class E_TEHTA_L    TINCO CALMA PARMA QUESSE AHA HWESTA LAMBE ALDA YANTA URE ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA VALA ANNA VILYA FORMEN
    \class E_TEHTA_XL   TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME
  \end
  
  \beg csub I_TEHTA
    \class I_TEHTA_XS   TELCO ARA
    \class I_TEHTA_S    ORE TW_EXT_11 TW_EXT_12 SULE HYARMEN
    \class I_TEHTA_L    TINCO CALMA PARMA QUESSE AHA HWESTA LAMBE ALDA YANTA URE ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA VALA ANNA VILYA FORMEN
    \class I_TEHTA_XL   TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME
  \end
  
  \beg csub O_TEHTA
    \class O_TEHTA_XS   TELCO ARA
    \class O_TEHTA_S    ORE TW_EXT_11 TW_EXT_12 SULE HYARMEN
    \class O_TEHTA_L    TINCO CALMA PARMA QUESSE AHA HWESTA LAMBE ALDA YANTA URE ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA VALA ANNA VILYA FORMEN
    \class O_TEHTA_XL   TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME
  \end
  
  \beg csub U_TEHTA
    \class U_TEHTA_XS   TELCO ARA
    \class U_TEHTA_S    ORE TW_EXT_11 TW_EXT_12 SULE HYARMEN
    \class U_TEHTA_L    TINCO CALMA PARMA QUESSE AHA HWESTA LAMBE ALDA YANTA URE ROMEN ARDA SILME_NUQUERNA ESSE_NUQUERNA VALA ANNA VILYA FORMEN
    \class U_TEHTA_XL   TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME
  \end
  
  \** no vowel mark **\
  \beg csub THINF_DOT
    \class THINF_DOT_XS     TELCO ROMEN ARDA
    \class THINF_DOT_L      ORE TW_EXT_11 TW_EXT_12  TINCO PARMA SULE FORMEN VALA ANNA VILYA SILME ESSE AHA HWESTA HYARMEN YANTA URE
    \class THINF_DOT_XL     QUESSE CALMA TW_EXT_13 TW_EXT_14 TW_EXT_21 TW_EXT_22 TW_EXT_23 TW_EXT_24 ANDO UMBAR ANGA UNGWE ANTO AMPA ANCA UNQUE NUMEN MALTA NOLDO NWALME 
    \class LAMBE_MARK_DOT   LAMBE ALDA
  \end

  \** palatalisation **\
  \beg csub THINF_DDOT
    \class THINF_DDOT_XS    ROMEN
    \class THINF_DDOT_S 
    \class THINF_DDOT_L     TINCO PARMA HYARMEN ANNA
    \class THINF_DDOT_XL    ANDO ANTO NUMEN MALTA
    \class LAMBE_MARK_DDOT  LAMBE
  \end
  
  \** gemination **\
  \beg csub DASH_INF
    \class DASH_INF_XS
    \class DASH_INF_S       TINCO PARMA CALMA ROMEN
    \class DASH_INF_L       NUMEN MALTA
    \class DASH_INF_XL
    \** LAMBE or not LAMBE ? **\
  \end
  
  \beg csub SHOOK_LEFT
    \class SHOOK_LEFT_L   CALMA
  \end
  
  \beg csub SHOOK_RIGHT
    \class SHOOK_RIGHT_L  TINCO PARMA   
  \end

\end

