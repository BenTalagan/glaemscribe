\**

Glǽmscribe (also written Glaemscribe) is a software dedicated to
the transcription of texts between writing systems, and more 
specifically dedicated to the transcription of J.R.R. Tolkien's 
invented languages to some of his devised writing systems.

Copyright (C) 2015 Benjamin Babut (Talagan).

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

**\

\** Telerin mode for glaemscribe (MAY BE INCOMPLETE) - Derived from Quenya **\

\beg changelog
  \entry "0.0.2" "Correcting ts/ps sequences to work better with eldamar"
  \entry "0.0.3" "Porting to virtual chars"
  \entry "0.0.4" "Added charset support for Annatar"
  \entry "0.0.5" "Added support for the FreeMonoTengwar font" 
\end

\language "Telerin"
\writing  "Tengwar"
\mode     "Glaemscrafu"
\version  "0.0.4"
\authors  "Talagan (Benjamin Babut), based on J.R.R Tolkien"

\charset  tengwar_ds_sindarin true
\charset  tengwar_ds_parmaite false
\charset  tengwar_ds_eldamar  false
\charset  tengwar_ds_annatar  false
\charset  tengwar_freemono    false


\beg      options
  \option reverse_numbers true
  \beg option numbers_base BASE_12
    \value    BASE_10 10
    \value    BASE_12 12
  \end
\end

\beg      preprocessor
  \** Work exclusively downcase **\
  \downcase
  
  \** Simplify trema vowels **\
  \substitute ä a
  \substitute ë e
  \substitute ï i
  \substitute ö o
  \substitute ü u
  \substitute ÿ y
  
  \** Dis-ambiguate long vowels **\
  \rxsubstitute "(ā|â|aa)" "á"
  \rxsubstitute "(ē|ê|ee)" "é" 
  \rxsubstitute "(ī|î|ii)" "í"
  \rxsubstitute "(ō|ô|oo)" "ó"
  \rxsubstitute "(ū|û|uu)" "ú"
  \rxsubstitute "(ȳ|ŷ|yy)" "ý"

  \substitute   "qu" "q" \** Dis-ambiguate qu **\
  
  \elvish_numbers "\\eval numbers_base" "\\eval reverse_numbers"
\end
  
\beg processor

  \beg rules litteral
    {A}                 === a
    {AA}                === á
    {E}                 === e
    {EE}                === é
    {I}                 === i
    {II}                === í
    {O}                 === o
    {OO}                === ó
    {U}                 === u
    {UU}                === ú
    
    {AI}                === {A}{I}
    {AU}                === {A}{U}
    {EU}                === {E}{U}
    {IU}                === {I}{U}
    {OI}                === {O}{I}
    {UI}                === {U}{I}

                      
    {K}                 === (c,k)
    {W}                 === (v,w)
    {SS}                === (z,ss)
    
    \** {MB}                === (b,mb) **\
    \** {SS}                === (z,ss) **\
  
    {VOWELS}            === {A}           * {E}         * {I}           * {O}           * {U}
    {LVOWELS}           === {AA}          * {EE}        * {II}          * {OO}          * {UU}
    
    {TEHTAR}            === A_TEHTA      * E_TEHTA      * I_TEHTA    * O_TEHTA     * U_TEHTA
       
    {DIPHTHONGS}         === {AI}             * {AU}            * {EU}            *  {IU}           * {OI}            * {UI}
    {_DIPHTHONGS_}       === YANTA A_TEHTA    * URE A_TEHTA     * URE E_TEHTA     * URE I_TEHTA     * YANTA O_TEHTA   * YANTA U_TEHTA


    {V_D}         === [ {VOWELS}   * {DIPHTHONGS} ]
    {_V_D_}       === [ {TEHTAR} * {_DIPHTHONGS_} ]
    
    {V_D_WN}      === [ {VOWELS} * {DIPHTHONGS} * {NULL} ]  
    {_V_D_WN_}    === [ {TEHTAR} * {_DIPHTHONGS_} * {NULL} ]
 
    \** VOWEL RULES **\
    [{VOWELS}]        -->   TELCO[{TEHTAR}] \** Replace isolated short vowels **\
    [{LVOWELS}]       -->   ARA[{TEHTAR}] \**  Replace long vowels **\
    [{DIPHTHONGS}]     -->  [{_DIPHTHONGS_}]  \**  Replace diphthongs **\

    \** TELERIN: changed v/w, removed all y rules **\
    
    \** ===================== **\
    \** 1ST LINE RULES **\
    \** ===================== **\
    {L1}          === {K}   * q      * t       * p 
    {_L1_}        === CALMA * QUESSE * TINCO   * PARMA
    
    {L1_GEMS}     === {K}{K}              * tt                     * pp
    {_L1_GEMS_}   === CALMA GEMINATE_SIGN * TINCO GEMINATE_SIGN    * PARMA GEMINATE_SIGN

    \** NORMAL **\
    [ {L1} ] {V_D_WN}         --> [ {_L1_} ] {_V_D_WN_}
    [ {L1_GEMS} ] {V_D_WN}    --> [ {_L1_GEMS_} ] {_V_D_WN_}
                            
    ts{V_D_WN}          --> TINCO {_V_D_WN_} ALVEOLAR_SIGN
    ps{V_D_WN}          --> PARMA {_V_D_WN_} ALVEOLAR_SIGN
    {K}s{V_D_WN}        --> CALMA ALVEOLAR_SIGN {_V_D_WN_}   
    x{V_D_WN}           --> CALMA ALVEOLAR_SIGN {_V_D_WN_}   \** render ks for x **\
                            
    \** ===================== **\
    \** 2ND LINE RULES **\
    \** ===================== **\
    {L2}        === nd      * mb        * ng      *  ngw    * d      * b        * g
    {_L2_}      === ANDO    * UMBAR     * ANGA    *  UNGWE  * ORE    * VALA     * ANNA
    
    \** STANDARD **\
    [{L2}]{V_D_WN}  --> [{_L2_}]{_V_D_WN_}

    \** ===================== **\
    \** 3RD LINE RULES **\
    \** ===================== **\
    {L3}    === th     * f      * h      * hw
    {_L3_}  === SULE   * FORMEN * AHA    * HWESTA

    \** NORMAL **\
    [{L3}]{V_D_WN}  --> [{_L3_}]{_V_D_WN_}
      
    \** Override h with vowels (descendent) **\
    _h{V_D}                     --> HYARMEN {_V_D_}
    h[{LVOWELS}]                --> HYARMEN ARA [{TEHTAR}] 
    h                           --> AHA

    \** ===================== **\
    \** 4TH LINE RULES **\
    \** ===================== **\
    {L4}    === nt    * mp    * nc    * nq      \** Not nqu, due to preprocessor **\
    {_L4_}  === ANTO  * AMPA  * ANCA  * UNQUE
 
    \** NORMAL **\
    [{L4}]{V_D_WN}    --> [{_L4_}]{_V_D_WN_}

    \** ===================== **\
    \** 5TH LINE RULES **\
    \** ===================== **\
    {L5}    === n     * m     * ñ     * ñw      * _nw 
    {_L5_}  === NUMEN * MALTA * NOLDO * NWALME  * NWALME

    [{L5}]{V_D_WN}  --> [{_L5_}]{_V_D_WN_}

    nn{V_D_WN}          --> NUMEN GEMINATE_SIGN {_V_D_WN_}
    mm{V_D_WN}          --> MALTA GEMINATE_SIGN {_V_D_WN_}

    \** ===================== **\
    \** 6TH LINE RULES **\
    \** ===================== **\
    {L6}        === r     * {W}  
    {_L6_}      === ROMEN * VILYA 

    [{L6}]{V_D_WN} --> [{_L6_}]{_V_D_WN_}

    rr{V_D_WN}        --> ROMEN GEMINATE_SIGN {_V_D_WN_}
    rd{V_D_WN}        --> ARDA {_V_D_WN_}

    \** ===================== **\
    \** L   LINE RULES **\
    \** ===================== **\
    {LINE_L}          === l     * ld      * ll
    {_LINE_L_}        === LAMBE * ALDA    * LAMBE GEMINATE_SIGN

    [{LINE_L}]{V_D_WN}    --> [{_LINE_L_}]{_V_D_WN_}
    hl{V_D_WN}            --> HALLA LAMBE {_V_D_WN_}
    hr{V_D_WN}            --> HALLA ROMEN {_V_D_WN_}

    \** ===================== **\
    \** S/Z LINE RULES **\
    \** ===================== **\
    {L8}        === s               * {SS}   
    {_L8_}      === SILME_NUQUERNA  * ESSE_NUQUERNA 

    [{L8}]{V_D_WN} --> [{_L8_}]{_V_D_WN_}

    \** Override lonely s / ss / before consonant **\
    s               --> SILME
    s[{LVOWELS}]    --> SILME ARA [{TEHTAR}] 
    {SS}            --> ESSE
    {SS}[{LVOWELS}] --> ESSE ARA [{TEHTAR}] 
  \end
  
  \beg rules punctuation
    . --> PUNCT_DDOT
    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT
    …  --> PUNCT_TILD
    ... --> PUNCT_TILD
    .... --> PUNCT_TILD
    ..... --> PUNCT_TILD
    ...... --> PUNCT_TILD
    ....... --> PUNCT_TILD

    , --> PUNCT_DOT
    : --> PUNCT_DOT
    ; --> PUNCT_DOT
    ! --> PUNCT_EXCLAM
    ? --> PUNCT_INTERR
    · --> PUNCT_DOT

    \** Apostrophe **\

    ' --> {NULL}
    ’ --> {NULL}

    \** Quotes **\

    “ --> DQUOT_OPEN
    ” --> DQUOT_CLOSE
    « --> DQUOT_OPEN 
    » --> DQUOT_CLOSE 
    
    - --> {NULL}
    – --> PUNCT_TILD  
    — --> PUNCT_TILD

    [ --> PUNCT_PAREN_L
    ] --> PUNCT_PAREN_R
    ( --> PUNCT_PAREN_L
    ) --> PUNCT_PAREN_R
    { --> PUNCT_PAREN_L
    } --> PUNCT_PAREN_R
    < --> PUNCT_PAREN_L
    > --> PUNCT_PAREN_R  

    \** Not universal between fonts ... **\
    $ --> BOOKMARK_SIGN
    ≤ --> RING_MARK_L \** Ring inscription left beautiful stuff **\
    ≥ --> RING_MARK_R \** Ring inscription right beautiful stuff **\
 
  \end
  
  \beg rules numbers
    0 --> NUM_0
    1 --> NUM_1
    2 --> NUM_2
    3 --> NUM_3
    4 --> NUM_4
    5 --> NUM_5
    6 --> NUM_6
    7 --> NUM_7
    8 --> NUM_8
    9 --> NUM_9
    A --> NUM_10
    B --> NUM_11      
  \end
\end

\beg postprocessor
  \resolve_virtuals
\end  
