Glaemscribe.resource_manager.raw_modes["english-ipa"] = "\\**\n\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\nthe transcription of texts between writing systems, and more \nspecifically dedicated to the transcription of J.R.R. Tolkien\'s \ninvented languages to some of his devised writing systems.\n\nCopyright (C) 2015 Benjamin Babut (Talagan).\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\nany later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n**\\\n\n\\** FOR NOW THIS IS JUST A TEMPLATE **\\\n\n\\beg changelog\n\\end\n\n\\language \"English\"\n\\writing  \"Tengwar\"\n\\mode     \"Phonemic IPA\"\n\\version  \"0.0.1\"\n\\authors  \"J.R.R. Tolkien, impl. Talagan (Benjamin Babut)\"\n \n\\charset  tengwar_ds_sindarin false\n\\charset  tengwar_ds_parmaite false\n\\charset  tengwar_ds_eldamar  false\n\\charset  tengwar_ds_annatar  true\n\\charset  tengwar_freemono    false\n\n\\beg options\n  \\beg option espeak_voice ESPEAK_VOICE_EN_GB_JRRT\n    \\value ESPEAK_VOICE_EN_GB_JRRT 0\n    \\value ESPEAK_VOICE_EN_US_JRRT 1\n  \\end\n  \\beg option ancient_voiceless_labiovelar_fricative_wh WH_VLVF_HWESTA_SINDARINWA\n    \\value WH_VLVF_HWESTA_SINDARINWA 0\n    \\value WH_VLVF_WHINE_MERGER 1\n  \\end\n\\end\n\n\\beg  preprocessor\n  \\downcase\n  \n  \\** Remove phonetics accentuation marks **\\\n  \\substitute \"[ˈˌ]\" \"\"\n  \n  \\** Normalize ɚ : with or without ə ? **\\\n  \\** Option \"remove schwas ?\" with and without unutixe ? **\\\n  \\substitute \"ɚ\" \"əɹ\"\n  \n  \\** Next sounds will all use unutixe. **\\\n  \\** Long versions should resolve to short version + ore **\\\n  \\** Only ɜː would normally exist but let\'s be large **\\\n  \\rxsubstitute \"([ʌɜəɐ])ː\" \"\\\\1ɹ\"\n  \n  \\** Too much ore kills ore **\\\n  \\rxsubstitute \"ɹ+\" \"əɹ\"\n  \n\\end\n\n\\beg  processor\n\n  \\beg rules litteral\n       \n    \\** e (accent) : e * ɛ **\\\n    \\** æ (trois points pointe en bas): æ **\\\n    \\** ʌ (unutixe) : ʌ * ɜ * ə (schwa du e) * ɐ (schwa du a) **\\\n    \\** a : a * ɑ (stop/rob/swan) **\\ \n    \\** o : o * ɒ (lot anglais) / ɔ (lord)  **\\\n    \\** u : u * ʊ **\\\n    \\** i (amatixe) : i * ɪ * ᵻ  **\\\n    \n    {A}  === (a,ɑ) \n    {AE} === (æ)\n    {E}  === (e,ɛ) \n    \n    \\** TODO : CASSER EN DEUX LES SCHWAS ET LES NON SCHWA pour avoir potentiellement un traitement différent en fonction de l\'activation de l\'option qui vire les schwa **\\\n    {ER} === (ʌ,ɜ,ə,ɐ) \\** ɚ **\\\n    {I}  === (i,ɪ,ᵻ)\n    {O}  === (o,ɒ,ɔ)\n    {U}  === (u,ʊ)\n\n    \n    \\** GB DIPHTONGS **\\\n    \\** +dˈeɪ +skˈaɪ +bˈɔɪ +bˈiə +bˈeə +tˈʊə +ɡˌəʊ +kˈaʊ **\\\n    \\** US DIPHTONGS **\\\n    \\** =dˈeɪ =skˈaɪ =bˈɔɪ -bˈɪɹ -bˈɛɹ -tˈʊɹ +ɡˌoʊ =kˈaʊ **\\\n    \n    \\** Principe **\\\n    \\** 3 Diphtongues en ʊ :    aʊ (cow) / əʊ (GB : go) / oʊ (US : go) . Utiliser VALA **\\\n    \\** 3 Diphtongues en i/ɪ :  eɪ (day) / aɪ (sky) / ɔɪ (boy) . Utiliser ANNA (et pas YANTA!!)  **\\\n    \\** 3 Diphtongues en ə :    iə (GB : beer) / eə (GB: bear) / ʊə (US: tour) . Utiliser ? **\\\n    \n    {AU} === (aʊ) \\** cow **\\\n    {OU} === (oʊ) \\** US most / mˈoʊst **\\\n    {EU} === (əʊ) \\** GB go **\\\n    \n    {AJ} === (aɪ) \\** nine / nˈaɪn **\\\n    {EJ} === (eɪ) \\** game / ɡˈeɪm **\\\n    {OJ} === (ɔɪ) \\** boy **\\\n    \n    {IER} === (iə) \\** GB Beer **\\\n    {EAR} === (eə) \\** GB Bear **\\\n    {UER} === (ʊə) \\** GB Tour **\\\n    \n        \n    \\** ᵻ == schwi, pourrait avoir une option i ou schwa ou rien ou peut être autre **\\\n    	  \n		{VOWELS}            ===  {A}\n	\n  \n    {_WH_} === HWESTA_SINDARINWA\n    \\if \"ancient_voiceless_labiovelar_fricative_wh == WH_VLVF_WHINE_MERGER\"\n      {_WH_} === VALA\n    \\endif\n  \n	  \n    t --> TINCO\n    p --> PARMA\n    tʃ --> CALMA\n    k --> QUESSE\n    \n    d --> ANDO\n    b --> UMBAR\n    dʒ --> ANGA\n    ɡ --> UNGWE\n    \n    θ --> SULE\n    f --> FORMEN\n    ʃ --> AHA\n    x --> HWESTA\n    \n    ð --> ANTO\n    v --> AMPA\n    ʒ --> ANCA\n    ɣ --> UNQUE\n    \n    n --> NUMEN\n    m --> MALTA\n    nj --> NOLDO\n    ŋ --> NWALME\n    \n    ɹ --> ORE \n    w --> VALA \n    j --> ANNA \n    \\** VILYA **\\\n    \n    ɹ --> ROMEN \\** != ORE **\\\n    \\** ARDA **\\\n    l --> LAMBE\n    \\** ALDA **\\\n    \n    s --> SILME\n    s --> SILME_NUQUERNA\n    z --> ESSE\n    z --> ESSE_NUQUERNA\n    \n    h --> HYARMEN \n    ʍ --> {_WH_}\n    \\** YANTA **\\\n    \\** URE **\\\n    \n    \\** US : left : ɾ ʔ n̩  **\\\n    \n  \\end\n\n  \\beg rules punctuation	\n    . --> PUNCT_DDOT\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\n    ... --> PUNCT_TILD\n    …   --> PUNCT_TILD\n    .... --> PUNCT_TILD\n    ..... --> PUNCT_TILD\n    ...... --> PUNCT_TILD\n    ....... --> PUNCT_TILD\n    \n    , --> PUNCT_DOT\n    : --> PUNCT_DOT\n    ; --> PUNCT_DOT\n    ! --> PUNCT_EXCLAM\n    ? --> PUNCT_INTERR\n    · --> {NULL}\n\n    - --> {NULL} \n    – --> PUNCT_TILD  \n    — --> PUNCT_TILD\n\n    \\** Apostrophe **\\\n\n    \' --> {NULL}\n    ’ --> {NULL}\n\n    \\** Quotes **\\\n\n    “ --> DQUOT_OPEN\n    ” --> DQUOT_CLOSE\n    « --> DQUOT_OPEN \n    » --> DQUOT_CLOSE \n\n    [ --> PUNCT_PAREN_L\n    ] --> PUNCT_PAREN_R\n    ( --> PUNCT_PAREN_L\n    ) --> PUNCT_PAREN_R\n    { --> PUNCT_PAREN_L\n    } --> PUNCT_PAREN_R\n    < --> PUNCT_PAREN_L\n    > --> PUNCT_PAREN_R\n\n    \\** Not universal between fonts ... **\\\n    $ --> BOOKMARK_SIGN\n    ≤ --> RING_MARK_L \\** Ring inscription left beautiful stuff **\\\n    ≥ --> RING_MARK_R \\** Ring inscription right beautiful stuff **\\\n  \\end\n\n  \\beg rules numbers\n    0 --> NUM_0\n    1 --> NUM_1\n    2 --> NUM_2\n    3 --> NUM_3\n    4 --> NUM_4\n    5 --> NUM_5\n    6 --> NUM_6\n    7 --> NUM_7\n    8 --> NUM_8\n    9 --> NUM_9\n    A --> NUM_10\n    B --> NUM_11      \n  \\end\n\\end\n\n\\beg  postprocessor\n  \\resolve_virtuals\n\\end\n"