Glaemscribe.resource_manager.raw_modes["futhorc"] = "\\**\n\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\nthe transcription of texts between writing systems, and more \nspecifically dedicated to the transcription of J.R.R. Tolkien\'s \ninvented languages to some of his devised writing systems.\n\nCopyright (C) 2015 Benjamin Babut (Talagan).\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\nany later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n**\\\n\n\\beg changelog\n  \\entry \"0.0.1\" \"Initial version\"\n  \\entry \"0.0.2\" \"Adding quotes handling\"\n\\end\n\n\\language \"Old English\"\n\\writing  \"Runes\"\n\\mode     \"Old English Futhorc\"\n\\version  \"0.0.2\"\n\\authors  \"Historical impl. Bertrand Bellet\"\n\n\\world      primary_related_to_arda\n\\invention  historical\n\n\\charset  unicode_runes true\n\n\\beg options\n  \\option use_cweorth                     true\n  \\option use_stan                        true\n  \\option use_calc_and_gar                true\n\\end\n\n\\beg      preprocessor\n  \\downcase\n\\end\n\n\\beg      processor\n    \n  \\beg    rules litteral\n    {A}       === (a,á) \n    {E}       === (e,é) \n    {I}       === (i,í)\n    {O}       === (o,ó)\n    {U}       === (u,ú)\n    {Y}       === (y,ý)\n    {AE}      === (æ,ǽ)\n    {OE}      === (œ,œ́)\n    {EA}      === (ea,éa)\n    {EO}      === (eo,éo)\n    {IO}      === (io,ío)\n\n    \\**  VOWELS **\\\n\n    {A}       --> AC\n    {E}       --> EH\n    {I}       --> IS \n    {O}       --> OS\n    {U}       --> UR\n    {Y}       --> YR\n    {AE}      --> AESC\n    {OE}      --> ETHEL\n    {EA}      --> EAR\n    {EO}      --> EOH\n    {IO}      --> IOR                    \n\n    \\**  IOTATED VOWELS **\\\n    {IOTABLES}    ===  {A}  * {E} * {O} * {U} * {Y} * {AE} * {OE}   * {EA}  * {EO}\n    {_IOTABLES_}  ===  AC   * EH  * OS  * UR  * YR  * AESC * ETHEL  * EAR   * EOH \n    \n    i [{IOTABLES}] --> GER [{_IOTABLES_} ]  \n\n    \\**  CONSONANTS **\\\n    (b,bb)         --> BEORC\n    \n	  \\** (c,cc,k,kk)    --> CALC **\\\n    \\** (ċ,ċċ)         --> CEN **\\\n    (c,cc,k,kk)    --> CEN\n    (ċ,ċċ)         --> CEN\n    \\if use_calc_and_gar\n      \\** overload when option is on **\\ \n      (c,cc,k,kk)    --> CALC\n    \\endif\n      \n    (d,dd)         --> DAEG\n    (f,ff,v)       --> FEOH\n    \n	  \\**  (g,gg,cg)      --> GAR  **\\  \n    \\**  (ȝ,ġ,ġġ,ċġ)    --> GYFU **\\\n    (g,gg,cg)      --> GYFU    \n    (ȝ,ġ,ġġ,ċġ)    --> GYFU\n    \\if use_calc_and_gar\n      \\** overload when option is on **\\ \n      (g,gg,cg)      --> GAR\n    \\endif\n    \n    (h,hh,ç,χ)     --> HAEGL\n    (j,jj,ĭ)       --> GER\n    (l,ll)         --> LAGU\n    (m,mm)         --> MAN\n    (n,nn)         --> NYD\n    (p,pp)         --> PEORTH\n    (r,rr)         --> RAD\n    (s,ss,z)       --> SIGEL\n    (t,tt)         --> TIR\n    (þ,þþ,ð,ðð)    --> THORN\n    (w,ww)         --> WYNN\n  \n    \\** OLD ENGLISH AND **\\\n    \n    ⁊             --> OS NYD DAEG\n      \n    \\**  CLUSTERS WITH ING **\\    \n    \n    \\** ng            --> ING GAR **\\\n    \\** nġ            --> ING GYFU **\\\n    ng            --> ING GYFU\n    nġ            --> ING GYFU\n    \\if use_calc_and_gar\n      ng            --> ING GAR\n    \\endif\n      \n    \\** nc            --> ING CALC **\\\n    \\** (nċ,nk,nq)    --> ING CEN  **\\\n    nc            --> ING CEN\n    (nċ,nk,nq)    --> ING CEN\n    \\if use_calc_and_gar\n      ng            --> ING CALC\n    \\endif     \n      \n    \\**  CLUSTERS WITH S **\\   \n    x             --> EOLHX\n    (z,ts)        --> TIR SIGEL\n    \n    \\**  ADDITIONAL RUNES **\\    \n    \\if use_cweorth \n      (cw,qu,ccw,cqu)   --> CWEORTH\n    \\endif\n    \\if use_stan\n      st                --> STAN\n    \\endif\n      \n  \\end\n  \n  \\beg    rules  punctuation\n    , --> RUNIC_SINGLE_PUNCTUATION\n    ; --> RUNIC_SINGLE_PUNCTUATION\n    : --> RUNIC_MULTIPLE_PUNCTUATION\n    . --> RUNIC_MULTIPLE_PUNCTUATION\n    ! --> RUNIC_MULTIPLE_PUNCTUATION\n    ? --> RUNIC_CROSS_PUNCTUATION \n    “ --> {NULL}\n    ” --> {NULL}\n    « --> {NULL}\n    » --> {NULL}\n  \\end\n\\end\n  \n    \n      "