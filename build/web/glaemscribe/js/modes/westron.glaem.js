Glaemscribe.resource_manager.raw_modes["westron"] = "\\**\n\nGlǽmscribe (also written Glaemscribe) is a software dedicated to\nthe transcription of texts between writing systems, and more \nspecifically dedicated to the transcription of J.R.R. Tolkien\'s \ninvented languages to some of his devised writing systems.\n\nCopyright (C) 2015 Benjamin Babut (Talagan).\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\nany later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n**\\\n\n\\**  Westron mode for glaemscribe (MAY BE INCOMPLETE) **\\\n\\language Westron\n\\writing  Tengwar\n\\mode     Glaemscrafu\n\\version  0.0.1\n\\authors  \"Talagan (Benjamin Babut)\"\n\n\\charset  tengwar_ds true\n\n\\beg      options\n  \\option reverse_numbers true\n  \\beg option numbers_base BASE_12\n    \\value    BASE_10 10\n    \\value    BASE_12 12\n  \\end\n\\end\n\n\\beg      preprocessor\n  \\** Work exclusively downcase **\\\n  \\downcase\n  \n  \\** Simplify trema vowels **\\\n  \\substitute \"ä\" \"a\"\n  \\substitute \"ë\" \"e\"\n  \\substitute \"ï\" \"i\"\n  \\substitute \"ö\" \"o\"\n  \\substitute \"ü\" \"u\"\n  \\substitute \"ÿ\" \"y\"\n  \n  \\** Dis-ambiguate long vowels **\\\n  \\rxsubstitute \"(ā|â|aa)\" \"á\"\n  \\rxsubstitute \"(ē|ê|ee)\" \"é\"\n  \\rxsubstitute \"(ī|î|ii)\" \"í\"\n  \\rxsubstitute \"(ō|ô|oo)\" \"ó\"\n  \\rxsubstitute \"(ū|û|uu)\" \"ú\"\n  \\rxsubstitute \"(ȳ|ŷ|yy)\" \"ý\"\n  \n  \\** Preprocess numbers **\\\n  \\elvish_numbers \"\\\\eval numbers_base\" \"\\\\eval reverse_numbers\"\n\\end\n\n\\beg      processor\n\n  \\beg    rules litteral  \n    {A}   === a\n    {AA}  === á\n    {E}   === e\n    {EE}  === é\n    {I}   === i\n    {II}  === í\n    {O}   === o\n    {OO}  === ó\n    {U}   === u\n    {UU}  === ú\n\n    \\** Short diphthongs **\\\n    {AI}  === {A}{I}\n    {AU}  === {A}{U}\n	  {EI}  === {E}{I}\n	  {EU}  === {E}{U}\n	  {OI}  === {O}{I}\n	  {OU}  === {O}{U}\n	  {UI}  === {U}{I}\n	  {IU}  === {I}{U}\n\n    \\** LONG diphthongs **\\      \n    {AAI} === {AA}{I} \\** âi **\\\n    {AAU} === {AA}{U} \\** âu **\\\n    {EEI} === {EE}{I} \\** êi **\\\n    {EEU} === {EE}{U} \\** êu **\\\n    {OOI} === {OO}{I} \\** ôi **\\\n    {OOU} === {OO}{U} \\** ôu **\\\n\n    {SDIPHTHONGS}  === {AI}               * {AU}            * {EI} 				      * {EU}             * {IU}             * {OI}               * {OU}             * {UI}\n    {SDIPHTHENGS}  === YANTA A_TEHTA_L    * URE A_TEHTA_L   * YANTA E_TEHTA_L	  * URE E_TEHTA_L    * URE I_TEHTA_L    * YANTA O_TEHTA_L    * URE O_TEHTA_L    * YANTA U_TEHTA_L                   \n    {LDIPHTHONGS}  === {AAI}                  * {AAU}                 * {EEI}                 * {EEU}               * {OOI}                 * {OOU}\n    {LDIPHTHENGS}  === ARA A_TEHTA_XS YANTA   * ARA A_TEHTA_XS URE    * ARA E_TEHTA_XS YANTA  * ARA E_TEHTA_XS URE  * ARA O_TEHTA_XS YANTA  * ARA O_TEHTA_XS URE\n                   \n    {VOWELS}      === {A}         * {E}         * {I}           * {O}           * {U}    \n    {TEHTA_XS}    === A_TEHTA_XS  * E_TEHTA_XS  * I_TEHTA_XS    * O_TEHTA_XS    * U_TEHTA_XS \n    {TEHTA__S}    === A_TEHTA_S   * E_TEHTA_S   * I_TEHTA_S     * O_TEHTA_S     * U_TEHTA_S \n    {TEHTA__L}    === A_TEHTA_L   * E_TEHTA_L   * I_TEHTA_L     * O_TEHTA_L     * U_TEHTA_L \n    {TEHTA_XL}    === A_TEHTA_XL  * E_TEHTA_XL  * I_TEHTA_XL    * O_TEHTA_XL    * U_TEHTA_XL \n                   \n    {LVOWELS}     === {AA}            * {EE}            * {II}            * {OO}            * {UU}\n    {LVOWTNG}     === ARA A_TEHTA_XS  * ARA E_TEHTA_XS  * ARA I_TEHTA_XS  * ARA O_TEHTA_XS  * ARA U_TEHTA_XS \n\n    \\** Let\' put all vowels/diphthongs in the same basket **\\\n    {V_D}         === [ {VOWELS}    * {LVOWELS} * {SDIPHTHONGS} * {LDIPHTHONGS} ]        \n    \\** And their images... **\\            \n    {T_XS_D}      === [ {TEHTA_XS}  * {LVOWTNG} * {SDIPHTHENGS} * {LDIPHTHENGS} ]\n    {T_S_D}       === [ {TEHTA__S}  * {LVOWTNG} * {SDIPHTHENGS} * {LDIPHTHENGS} ]\n    {T_L_D}       === [ {TEHTA__L}  * {LVOWTNG} * {SDIPHTHENGS} * {LDIPHTHENGS} ]\n    {T_XL_D}      === [ {TEHTA_XL}  * {LVOWTNG} * {SDIPHTHENGS} * {LDIPHTHENGS} ]\n\n    [{VOWELS}]      --> TELCO [{TEHTA_XS}]   \\** Replace isolated short vowels **\\\n    [{LVOWELS}]     --> [{LVOWTNG}]    \\** Replace long vowels **\\\n    [{SDIPHTHONGS}]  --> [{SDIPHTHENGS}]  \\** Replace short diphthongs **\\\n    [{LDIPHTHONGS}]  --> [{LDIPHTHENGS}]  \\** Replace long diphthongs **\\\n\n    \\** ================ **\\\n    \\**    CONSONANTS    **\\\n    \\** ================ **\\     \n\n    {L1_S}         === t      * p     * ch		  * (c,k)       \n    {L1_T}         === TINCO  * PARMA * CALMA	  * QUESSE \n    \n    [{L1_S}]       -->  [ {L1_T} ]\n    [{L1_S}]{V_D}  -->  [ {L1_T} ]{T_S_D} \n	\n    {L1_G_S}         === tt			             * pp                  *cch				        * (c,k)(c,k)             \n    {L1_G_T}         === TINCO DASH_INF_S    * PARMA DASH_INF_S    *CALMA DASH_INF_S	* QUESSE DASH_INF_S  \n    \n    [{L1_G_S}]       -->  [ {L1_G_T} ]\n    [{L1_G_S}]{V_D}  -->  [ {L1_G_T} ]{T_S_D} \n	  \n    {L1_N_S}         === nt			             * mp                * nch				        * (n,ñ)(c,k)             \n    {L1_N_T}         === TINCO DASH_SUP_S    * PARMA DASH_SUP_S  * CALMA DASH_SUP_S	  * QUESSE DASH_SUP_S  \n    \n    [{L1_N_S}]       -->  [ {L1_N_T} ]\n    [{L1_N_S}]{V_D}  -->  [ {L1_N_T} ]{T_S_D} 	 \n\n    {L2_S}         === d    * b     * j	  	* g\n    {L2_T}         === ANDO * UMBAR * ANGA	* UNGWE\n		\n    [{L2_S}]       --> [{L2_T}] \n    [{L2_S}]{V_D}  --> [{L2_T}]{T_XL_D} \n\n    {L2_G_S}         === dd                * bb                  * jj			            * gg\n    {L2_G_T}         === ANDO DASH_INF_L   * UMBAR DASH_INF_L    * ANGA DASH_INF_L	  * UNGWE DASH_INF_L\n		\n    [{L2_G_S}]       --> [{L2_G_T}] \n    [{L2_G_S}]{V_D}  --> [{L2_G_T}]{T_XL_D} \n\n    {L2_N_S}         === nd                * Mb                  * nj			            * (n,ñ)g\n    {L2_N_T}         === ANDO DASH_SUP_L   * UMBAR DASH_SUP_L    * ANGA DASH_SUP_L	  * UNGWE DASH_SUP_L\n		\n    [{L2_N_S}]       --> [{L2_N_T}] \n    [{L2_N_S}]{V_D}  --> [{L2_N_T}]{T_XL_D} \n\n    \\** Alignment of tehta is not the same in the font **\\\n    \\** So we need to split the third line unfortunately **\\\n    {L3_1_S}          === (th,þ)    * (f,ph)      \n    {L3_1_T}          === SULE      * FORMEN  \n   \n    {L3_2_S}          === sh     * kh     \n    {L3_2_T}          === AHA    * HWESTA\n   \n    [{L3_1_S}]        --> [{L3_1_T}] \n    [{L3_1_S}]{V_D}   --> [{L3_1_T}]{T_S_D} \n    [{L3_2_S}]        --> [{L3_2_T}] \n    [{L3_2_S}]{V_D}   --> [{L3_2_T}]{T_L_D} \n		\n    {L3_1G_S}         === (thth,tth,þþ)     * (ff,phph,pph)\n    {L3_1G_T}         === SULE DASH_INF_S   * FORMEN DASH_INF_S\n   \n    {L3_2G_S}          === (shsh,ssh)      * (k,kh)kh\n    {L3_2G_T}          === AHA DASH_INF_S  * HWESTA DASH_INF_S\n   \n    [{L3_1G_S}]        --> [{L3_1G_T}] \n    [{L3_1G_S}]{V_D}   --> [{L3_1G_T}]{T_S_D} \n    [{L3_2G_S}]        --> [{L3_2G_T}] \n    [{L3_2G_S}]{V_D}   --> [{L3_2G_T}]{T_L_D} 		\n\n    {L3_1N_S}          === (nth,nþ)          * (nf,mf,mph)      \n    {L3_1N_T}          === SULE DASH_SUP_S   * FORMEN DASH_SUP_S  \n   \n    {L3_2N_S}          === nsh               * (n,ñ)kh     \n    {L3_2N_T}          === AHA DASH_SUP_S    * HWESTA DASH_SUP_S\n   \n    [{L3_1N_S}]        --> [{L3_1N_T}] \n    [{L3_1N_S}]{V_D}   --> [{L3_1N_T}]{T_S_D} \n    [{L3_2N_S}]        --> [{L3_2N_T}] \n    [{L3_2N_S}]{V_D}   --> [{L3_2N_T}]{T_L_D} \n\n    {L4_S}            === (dh,ð)    * v   	* zh	  * gh\n    {L4_T}            === ANTO      * AMPA  * ANCA	* UNQUE\n		\n    [{L4_S}]          --> [{L4_T}] \n    [{L4_S}]{V_D}     --> [{L4_T}]{T_XL_D} \n\n    {L4_G_S}            === (dh,ð)(dh,ð)     * vv               * (zhzh,zzh)	      * (ghgh,ggh)\n    {L4_G_T}            === ANTO DASH_INF_L  * AMPA DASH_INF_L  * ANCA DASH_INF_L	  * UNQUE DASH_INF_L\n		\n    [{L4_G_S}]          --> [{L4_G_T}] \n    [{L4_G_S}]{V_D}     --> [{L4_G_T}]{T_XL_D} \n\n    {L4_N_S}            === n(dh,ð)          * (mv,nv)          * nzh	              * (n,ñ)gh\n    {L4_N_T}            === ANTO DASH_SUP_L  * AMPA DASH_SUP_L  * ANCA DASH_SUP_L	  * UNQUE DASH_SUP_L\n		\n    [{L4_N_S}]          --> [{L4_N_T}] \n    [{L4_N_S}]{V_D}     --> [{L4_N_T}]{T_XL_D} \n\n    {L5_S}            === n     * m     * ny     * ñ\n    {L5_T}            === NUMEN * MALTA * NOLDO  * NWALME\n		\n    [{L5_S}]          --> [{L5_T}] \n    [{L5_S}]{V_D}     --> [{L5_T}]{T_XL_D} \n\n    {L5_G_S}            === nn      * mn      * (nyny,nny)   * ññ\n    {L5_G_T}            === NUMEN   * MALTA   * NOLDO        * NWALME\n		\n    [{L5_G_S}]          --> [{L5_G_T}] \n    [{L5_G_S}]{V_D}     --> [{L5_G_T}]{T_XL_D} \n		\n    {L6_S}            === w  	  * y     * rr                * ww         	   * yy\n    {L6_T}            === VALA  * ANNA  * ROMEN DASH_INF_S  * VALA DASH_INF_S  * ANNA DASH_INF_S\n    [r * {L6_S}]      --> [ ORE   * {L6_T}] \n    [r * {L6_S}]{V_D} --> [ ROMEN * {L6_T}]{T_S_D} \n\n    \\** This one is not useful (redundant with higher) **\\\n    \\** Keep it for clarity of mind **\\\n    r_                --> ORE\n\n    s{V_D}            --> SILME_NUQUERNA {T_S_D}  \\** Before a vowel goes down **\\\n    s                 --> SILME                   \\** Any other pos, up **\\\n    z{V_D}            --> ESSE_NUQUERNA {T_S_D}   \\** Before a vowel goes down **\\\n    z                 --> ESSE                    \\** Any other pos, up **\\\n		\n    ns{V_D}           --> SILME_NUQUERNA DASH_SUP_S {T_S_D}\n    ns                --> SILME_NUQUERNA DASH_SUP_S                   \n    nz{V_D}           --> ESSE_NUQUERNA DASH_SUP_S {T_S_D}   \n    nz                --> ESSE_NUQUERNA DASH_SUP_S                \n\n    ts                --> TINCO SHOOK_RIGHT_L\n    ps                --> PARMA SHOOK_RIGHT_L\n    (ks,cs,x)         --> QUESSE SHOOK_LEFT_L\n\n    ts{V_D}         --> TINCO SHOOK_RIGHT_L {T_XL_D} \n    ps{V_D}         --> PARMA SHOOK_RIGHT_L {T_XL_D} \n    (ks,cs,x){V_D}  --> QUESSE SHOOK_LEFT_L {T_S_D}	\n\n    h{V_D}            --> HYARMEN {T_XS_D}\n    h                 --> HYARMEN\n    hh{V_D}           --> HYARMEN DASH_INF_L {T_XS_D}\n    hh                --> HYARMEN DASH_INF_L\n                      \n    l{V_D}            --> LAMBE {T_L_D}\n    l                 --> LAMBE\n                      \n    ll{V_D}           --> LAMBE LAMBE_MARK_TILD {T_L_D}\n    ll                --> LAMBE LAMBE_MARK_TILD\n		\n    (hl,lh){V_D}      --> ALDA {T_XL_D}\n    (hl,lh)           --> ALDA		\n\n    (hr,rh){V_D}      --> ARDA {T_XL_D}\n    (hr,rh)           --> ARDA	\n		\n  \\end\n  \n  \\beg rules punctutation\n    . --> PUNCT_DDOT\n    .. --> PUNCT_DOT PUNCT_DDOT PUNCT_DOT\n    …  --> PUNCT_TILD\n    ... --> PUNCT_TILD\n    .... --> PUNCT_TILD\n    ..... --> PUNCT_TILD\n    ...... --> PUNCT_TILD\n    ....... --> PUNCT_TILD\n\n    , --> PUNCT_DOT\n    : --> PUNCT_DOT\n    ; --> PUNCT_DOT\n    ! --> PUNCT_EXCLAM\n    ? --> PUNCT_INTERR\n    · --> PUNCT_DOT\n\n    \\** Apostrophe **\\\n\n    \' --> {NULL}\n    ’ --> {NULL}\n\n    \\** Quotes **\\\n\n    “ --> DQUOT_OPEN\n    ” --> DQUOT_CLOSE\n    « --> DQUOT_OPEN \n    » --> DQUOT_CLOSE \n    \n    - --> PUNCT_DOT    \n    – --> WAVE_MED_SIMPLE  \n    — --> WAVE_MED_DOUBLE\n \n    [ --> PUNCT_PAREN_L\n    ] --> PUNCT_PAREN_R\n    ( --> PUNCT_PAREN_L\n    ) --> PUNCT_PAREN_R\n    { --> PUNCT_PAREN_L\n    } --> PUNCT_PAREN_R\n    < --> PUNCT_PAREN_L\n    > --> PUNCT_PAREN_R  \n\n    \\** Not universal between fonts ... **\\\n    $ --> BOOKMARK_SIGN\n    ≤ --> RING_MARK_L \\** Ring inscription left beautiful stuff **\\\n    ≥ --> RING_MARK_R \\** Ring inscription right beautiful stuff **\\\n  \\end\n\n  \\beg rules numbers\n    0 --> NUM_0\n    1 --> NUM_1\n    2 --> NUM_2\n    3 --> NUM_3\n    4 --> NUM_4\n    5 --> NUM_5\n    6 --> NUM_6\n    7 --> NUM_7\n    8 --> NUM_8\n    9 --> NUM_9\n    A --> NUM_10\n    B --> NUM_11   \n  \\end\n  \n\\end\n\n"